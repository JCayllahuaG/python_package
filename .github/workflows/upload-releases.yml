name: Upload Release Artifacts

on:
  release:
    types: [created, published]
jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies & poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - name: Install toml module
      run: |
        poetry add toml --dev

    - name: Get package name
      id: package_name
      run: |
        PACKAGE_NAME=$(poetry run python -c "import toml; print(toml.load('pyproject.toml')['tool']['poetry']['name'])")
        echo "package_name=${PACKAGE_NAME}" >> $GITHUB_ENV
        
    - name: Print extracted package name
      run: echo "Package name is ${{ env.package_name }}"

    - name: Get package version
      id: package_version
      run: |
        PACKAGE_VERSION=$(poetry version | cut -d' ' -f2)
        echo "package_version=${PACKAGE_VERSION}" >> $GITHUB_ENV

    - name: Print extracted package version
      run: echo "Package version is ${{ env.package_version }}"

    - name: Build the package
      run: |
        poetry build
        
    - name: Upload to GitHub Pages
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}  # Use your PAT secret here
      run: |
        TARGET_DIR=${{ env.package_name }}/v${{ env.package_version }}
        
        # Create the target directory and copy the build artifacts
        mkdir -p ${TARGET_DIR}
        cp dist/* ${TARGET_DIR}/
        
        # Configure git user details
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"
        
        # Clone the target repository using the GH_PAT for authentication
        git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/testing-organization-jcayllahua/package-artifacts.git
        
        cd package-artifacts
        git checkout main
        
        # Copy the build artifacts into the repository
        cp -r ../${TARGET_DIR} .  # Copy the newly built artifacts
        git add .
        git commit -m "Add artifacts for ${{ env.package_name }} version ${{ env.package_version }}"
        
        # Push to the remote repository using the GH_PAT for authentication
        git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/testing-organization-jcayllahua/package-artifacts.git
    
        
          
